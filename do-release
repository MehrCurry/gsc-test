#!/bin/sh

Version=$1

git checkout -b release/$Version
mvn -B release:prepare -DreleaseVersion=$Version
mvn -B release:perform

# merge the version changes back into develop so that folks are working against 
#	the new release ("0.0.3-SNAPSHOT", in this case)
git checkout develop
git merge --no-ff release/$Version
 
# housekeeping -- rewind the release branch by one commit to fix its version at "0.0.2"
#	excuse the force push, it's because maven will have already pushed '0.0.3-SNAPSHOT'
#	to origin with this branch, and I don't want that version (or a diverging revert commit)
#	in the release or master branches.
git checkout release/$Version
git reset --hard HEAD~1
git push --force origin release/$Version
git checkout develop
 
# finally, if & when the code gets deployed to production
git checkout master
git merge --no-ff release/$Version
git branch -d release/$Version
git checkout develop

function error_exit
{

#   ----------------------------------------------------------------
#   Function for exit due to fatal program error
#   	Accepts 1 argument:
#   		string containing descriptive error message
#   ----------------------------------------------------------------


    git checkout develop
    git branch -D release/$Version
}